name: Deploy Backend to Beanstalk (monorepo)
on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'          # only run when backend changes
      - '.github/workflows/deploy-beanstalk.yml'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'   # or 17

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('backend/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build
        run: mvn -B -DskipTests package

      - name: Prepare EB bundle
        run: |
          rm -rf bundle && mkdir -p bundle/.ebextensions
          # pick the boot 'repackaged' jar deterministically
          JAR=$(ls target/*-SNAPSHOT.jar 2>/dev/null || ls target/*.jar | head -n 1)
          echo "Using JAR: $JAR"
          cp "$JAR" bundle/app.jar
          cp Procfile bundle/Procfile
          sed -i 's/\r$//' bundle/Procfile
          # include EB health config
          cp .ebextensions/00-health.config bundle/.ebextensions/00-health.config

          # --- verification: jar must have Main-Class (Boot sets JarLauncher) ---
          if ! unzip -p bundle/app.jar META-INF/MANIFEST.MF | grep -qi '^Main-Class:'; then
            echo "ERROR: app.jar is not executable (no Main-Class in MANIFEST)."
            unzip -p bundle/app.jar META-INF/MANIFEST.MF || true
            exit 1
          fi

          cd bundle && zip -r ../deploy.zip .

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: memorials-api
          environment_name: memorials-api-env
          region: eu-west-2
          version_label: v-${{ github.run_number }}
          deployment_package: backend/deploy.zip   # path relative to repo root
          use_existing_version_if_available: true
          wait_for_deployment: true